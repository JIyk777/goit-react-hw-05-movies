{"version":3,"file":"static/js/77.4405827d.chunk.js","mappings":"oKAAO,IAAMA,EAAS,kC,sLCGTC,EAAaC,EAAAA,GAAAA,GAAH,4CAIVC,EAAgBD,EAAAA,GAAAA,KAAH,iEAKbE,EAAcF,EAAAA,GAAAA,EAAH,iEAKXG,EAAiBH,EAAAA,GAAAA,IAAH,wDAKdI,EAAcJ,EAAAA,GAAAA,IAAH,kLAMXK,GAAUL,EAAAA,EAAAA,IAAOM,EAAAA,GAAPN,CAAH,2TAkBPO,EAAeP,EAAAA,GAAAA,GAAH,oLAWZQ,GAAYR,EAAAA,EAAAA,IAAOM,EAAAA,GAAPN,CAAH,gK,iBC1CTS,EAAe,WAAO,IAAD,IACxBC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,YAA1B,eAAOC,EAAP,KAAcC,EAAd,KAEMC,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,UAO7C,IALAC,EAAAA,EAAAA,YAAU,WCnBqB,IAAAC,KDoBXV,ECnBbW,MAAM,sCAAD,OAC4BD,EAD5B,oBAC0CtB,EAAAA,EAD1C,oBAEVwB,MAAK,SAAAC,GAAC,OAAIA,EAAEC,MAAN,KDkBHF,MAAK,SAAAC,GAAC,OAAIT,EAASS,EAAb,IACNE,OAAM,SAAAF,GAAC,OAAIG,QAAQC,IAAIJ,EAAhB,GACX,GAAE,CAACb,IACCG,EAIL,OACE,UAACe,EAAA,EAAD,CAAKC,MAAM,SAASC,WAAW,OAAOC,YAAY,OAAOC,QAAQ,OAAjE,WACE,SAAC3B,EAAD,CAAS4B,GAAIlB,EAAb,qBACuB,KAAtBF,EAAMqB,aACL,oCAEA,iCACE,UAACN,EAAA,EAAD,CACEO,QAAQ,OACRN,MAAM,SACNC,WAAW,OACXC,YAAY,OACZC,QAAQ,OACRI,eAAe,SANjB,WAQE,SAAChC,EAAD,CACEiC,IAAG,0CAAqCxB,EAAMyB,aAC9CC,IAAI,MAEN,UAACX,EAAA,EAAD,CAAKE,WAAW,OAAOD,MAAM,MAA7B,WACE,SAAC9B,EAAD,UAAac,EAAM2B,kBAEnB,4BACE,SAACvC,EAAD,wBACA,uBAAIY,EAAM4B,eAGZ,4BACE,SAACvC,EAAD,sBACA,SAACC,EAAD,UACGU,EAAM6B,OAAOC,KAAI,SAAAC,GAAI,OACpB,0BAAuBA,EAAKC,MAAjBD,EAAKC,KADI,gBAQ9B,UAACtC,EAAD,YACE,SAACC,EAAD,CAAWyB,GAAG,OAAOhB,MAAO,CAAEC,KAAMH,GAApC,UACE,oCAEF,SAACP,EAAD,CAAWyB,GAAG,SAAShB,MAAO,CAAEC,KAAMH,GAAtC,UACE,yCAIJ,SAAC,KAAD,SAKT,EAED,G,2EEzEaa,GAAM5B,EAAAA,EAAAA,IAAO,MAAPA,CACjB8C,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,G","sources":["ApiKey/ApiKey.js","components/MovieDetails/MovieDetailsStyle.jsx","components/MovieDetails/MovieDetails.jsx","fetch/MovieDetailsFetch.js","components/box/Box.jsx"],"sourcesContent":["export const ApiKey = '5a1111e9d2c7100474f9cf656ec9c27e';\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MovieTitle = styled.h2`\n  font-size: 48px;\n`;\n\nexport const MovieOverview = styled.span`\n  font-size: 28px;\n  font-weight: 700;\n`;\n\nexport const MovieGenres = styled.p`\n  font-size: 28px;\n  font-weight: 700;\n`;\n\nexport const MovieGenresBox = styled.div`\n  display: flex;\n  gap: 15px;\n`;\n\nexport const MoviePoster = styled.img`\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nexport const BackBtn = styled(Link)`\n  display: flex;\n  justify-content: center;\n  margin-left: auto;\n  margin-right: auto;\n  text-decoration: none;\n  color: black;\n  width: 100px;\n  background-color: #f5deb3;\n  padding: 4px 10px;\n  border-radius: 30px;\n\n  &:hover,\n  &:focus {\n    background-color: #daa520;\n  }\n`;\n\nexport const MovieLinkBox = styled.ul`\n  display: flex;\n  gap: 26px;\n  margin-left: auto;\n  margin-right: auto;\n  width: 300px;\n  list-style: none;\n  font-size: 18px;\n  font-weight: 700;\n`;\n\nexport const MovieLink = styled(Link)`\n  color: black;\n  text-decoration: none;\n\n  &.active {\n    color: orange;\n  }\n\n  &:hover,\n  &:focus {\n    color: orange;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { Outlet, useParams, useLocation } from 'react-router-dom';\nimport { Box } from 'components/box/Box';\nimport {\n  MovieTitle,\n  MovieOverview,\n  MovieGenres,\n  MovieGenresBox,\n  MoviePoster,\n  BackBtn,\n  MovieLinkBox,\n  MovieLink,\n} from './MovieDetailsStyle';\nimport { MovieDetailsFetch } from 'fetch/MovieDetailsFetch';\n\nexport const MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState();\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/movies';\n\n  useEffect(() => {\n    MovieDetailsFetch(movieId)\n      .then(r => setMovie(r))\n      .catch(r => console.log(r));\n  }, [movieId]);\n  if (!movie) {\n    return;\n  }\n\n  return (\n    <Box width=\"1280px\" marginLeft=\"auto\" marginRight=\"auto\" padding=\"30px\">\n      <BackBtn to={backLinkHref}>Go Back</BackBtn>\n      {movie.status_code === 34 ? (\n        <div>Error</div>\n      ) : (\n        <>\n          <Box\n            display=\"flex\"\n            width=\"1280px\"\n            marginLeft=\"auto\"\n            marginRight=\"auto\"\n            padding=\"30px\"\n            justifyContent=\"center\"\n          >\n            <MoviePoster\n              src={`https://image.tmdb.org/t/p/w300/${movie.poster_path}`}\n              alt=\"\"\n            ></MoviePoster>\n            <Box marginLeft=\"50px\" width=\"50%\">\n              <MovieTitle>{movie.original_title}</MovieTitle>\n\n              <div>\n                <MovieOverview>Overview</MovieOverview>\n                <p>{movie.overview}</p>\n              </div>\n\n              <div>\n                <MovieGenres>Genres</MovieGenres>\n                <MovieGenresBox>\n                  {movie.genres.map(item => (\n                    <span key={item.name}>{item.name}</span>\n                  ))}\n                </MovieGenresBox>\n              </div>\n            </Box>\n          </Box>\n\n          <MovieLinkBox>\n            <MovieLink to=\"cast\" state={{ from: backLinkHref }}>\n              <li>Cast</li>\n            </MovieLink>\n            <MovieLink to=\"review\" state={{ from: backLinkHref }}>\n              <li>Review</li>\n            </MovieLink>\n          </MovieLinkBox>\n\n          <Outlet />\n        </>\n      )}\n    </Box>\n  );\n};\n\nexport default MovieDetails;\n","import { ApiKey } from 'ApiKey/ApiKey';\n\nexport const MovieDetailsFetch = id => {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${ApiKey}&language=en-US`\n  ).then(r => r.json());\n};\n","import styled from 'styled-components';\nimport {\n  space,\n  layout,\n  color,\n  flexbox,\n  typography,\n  shadow,\n  border,\n} from 'styled-system';\n\nexport const Box = styled('div')(\n  color,\n  space,\n  layout,\n  flexbox,\n  typography,\n  shadow,\n  border\n);\n"],"names":["ApiKey","MovieTitle","styled","MovieOverview","MovieGenres","MovieGenresBox","MoviePoster","BackBtn","Link","MovieLinkBox","MovieLink","MovieDetails","movieId","useParams","useState","movie","setMovie","backLinkHref","useLocation","state","from","useEffect","id","fetch","then","r","json","catch","console","log","Box","width","marginLeft","marginRight","padding","to","status_code","display","justifyContent","src","poster_path","alt","original_title","overview","genres","map","item","name","color","space","layout","flexbox","typography","shadow","border"],"sourceRoot":""}