{"version":3,"file":"static/js/230.4e007a13.chunk.js","mappings":"qKAAO,IAAMA,EAAS,kC,2ECWTC,GAAMC,EAAAA,EAAAA,IAAO,MAAPA,CACjBC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,G,6ICfWC,EAAaR,EAAAA,GAAAA,KAAH,iIAQVS,EAAcT,EAAAA,GAAAA,GAAH,4LAWXU,EAAWV,EAAAA,GAAAA,IAAH,0KAQRW,GAAYX,EAAAA,EAAAA,IAAOY,EAAAA,GAAPZ,CAAH,wR,iBCyBtB,EAjDe,WAAO,IAAD,EACnB,GAAkCa,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,EAAU,UAAGJ,EAAaK,IAAI,eAApB,QAA+B,IAE/CC,EAAAA,EAAAA,YAAU,WCVc,IAAAC,EDWH,KAAfH,ICXkBG,EDcXH,ECbNI,MAAM,qDAAD,OAC2C3B,EAAAA,EAD3C,iCAC0E0B,EAD1E,gCAEVE,MAAK,SAAAC,GAAC,OAAIA,EAAEC,MAAN,KDWiBF,MAAK,SAAAC,GAAC,OAAIZ,EAAgBY,EAApB,GAC9B,GAAE,CAACN,IAUJ,OACE,UAACtB,EAAA,EAAD,CAAK8B,MAAM,SAASC,WAAW,OAAOC,YAAY,OAAlD,WACE,UAACvB,EAAD,CAAYwB,SAVK,SAAAC,GACnBA,EAAEC,iBACF,IACMV,EADOS,EAAEE,cACGC,SAASZ,KAAKa,MAEhCnB,EAD4B,KAATM,EAAc,CAAEA,KAAAA,GAAS,CAAC,EAE9C,EAIG,WACE,kBAAOc,KAAK,OAAOd,KAAK,UACxB,mBAAQc,KAAK,SAAb,uBAEiB,IAAlBxB,EAAOyB,SACN,SAAC9B,EAAD,UACGK,EAAO0B,QAAQC,KAAI,SAAAC,GAAK,OACvB,SAAC/B,EAAD,CACEgC,GAAE,UAAKD,EAAME,IACbC,MAAO,CAAEC,KAAM3B,GAFjB,UAKE,2BACE,SAACT,EAAD,CACEqC,IAAG,0CAAqCL,EAAMM,aAC9CnB,MAAM,QAEPa,EAAMO,mBAPJP,EAAME,GAJU,QAmBlC,C","sources":["ApiKey/ApiKey.js","components/box/Box.jsx","pages/Movies/MoviesStyle.jsx","pages/Movies/Movies.jsx","fetch/MovieFetch.js"],"sourcesContent":["export const ApiKey = '5a1111e9d2c7100474f9cf656ec9c27e';\n","import styled from 'styled-components';\nimport {\n  space,\n  layout,\n  color,\n  flexbox,\n  typography,\n  shadow,\n  border,\n} from 'styled-system';\n\nexport const Box = styled('div')(\n  color,\n  space,\n  layout,\n  flexbox,\n  typography,\n  shadow,\n  border\n);\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MoviesForm = styled.form`\n  display: flex;\n  gap: 10px;\n  justify-content: center;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const MoviesUlBox = styled.ul`\n  justify-content: center;\n  margin-left: auto;\n  margin-right: auto;\n  display: flex;\n  gap: 25px;\n  list-style: none;\n  flex-wrap: wrap;\n  padding: 30px;\n`;\n\nexport const MovieImg = styled.img`\n  width: 100%;\n  object-fit: cover;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    transform: scale(1.03);\n  }\n`;\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n  text-align: center;\n  color: black;\n  width: calc((100% - 100px) / 5);\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n","import { useState, useEffect } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { Box } from 'components/box/Box';\nimport { MoviesForm, MoviesUlBox, MovieImg, MovieLink } from './MoviesStyle';\nimport { MovieFetch } from 'fetch/MovieFetch';\n\nconst Movies = () => {\n  const [movies, setSearchMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n  const moviesName = searchParams.get('name') ?? '';\n\n  useEffect(() => {\n    if (moviesName === '') {\n      return;\n    }\n    MovieFetch(moviesName).then(r => setSearchMovies(r));\n  }, [moviesName]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const name = form.elements.name.value;\n    const nextParams = name !== '' ? { name } : {};\n    setSearchParams(nextParams);\n  };\n\n  return (\n    <Box width=\"1280px\" marginLeft=\"auto\" marginRight=\"auto\">\n      <MoviesForm onSubmit={handleSubmit}>\n        <input type=\"text\" name=\"name\"></input>\n        <button type=\"submit\">Search</button>\n      </MoviesForm>\n      {movies.length !== 0 && (\n        <MoviesUlBox>\n          {movies.results.map(movie => (\n            <MovieLink\n              to={`${movie.id}`}\n              state={{ from: location }}\n              key={movie.id}\n            >\n              <li>\n                <MovieImg\n                  src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n                  width=\"300\"\n                ></MovieImg>\n                {movie.original_title}\n              </li>\n            </MovieLink>\n          ))}\n        </MoviesUlBox>\n      )}\n    </Box>\n  );\n};\nexport default Movies;\n","import { ApiKey } from 'ApiKey/ApiKey';\n\nexport const MovieFetch = name => {\n  return fetch(\n    `https://api.themoviedb.org/3/search/movie?api_key=${ApiKey}&language=en-US&query=${name}&page=1&include_adult=false`\n  ).then(r => r.json());\n};\n"],"names":["ApiKey","Box","styled","color","space","layout","flexbox","typography","shadow","border","MoviesForm","MoviesUlBox","MovieImg","MovieLink","Link","useState","movies","setSearchMovies","useSearchParams","searchParams","setSearchParams","location","useLocation","moviesName","get","useEffect","name","fetch","then","r","json","width","marginLeft","marginRight","onSubmit","e","preventDefault","currentTarget","elements","value","type","length","results","map","movie","to","id","state","from","src","poster_path","original_title"],"sourceRoot":""}