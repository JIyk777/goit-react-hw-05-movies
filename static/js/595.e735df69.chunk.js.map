{"version":3,"file":"static/js/595.e735df69.chunk.js","mappings":"qLAgCA,UA7Be,WACb,OAA8BA,EAAAA,EAAAA,YAA9B,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAQR,IAPAE,EAAAA,EAAAA,YAAU,WACRC,MAAM,sCAAD,OACmCH,EADnC,4EAGFI,MAAK,SAAAC,GAAC,OAAIA,EAAEC,MAAN,IACNF,MAAK,SAAAC,GAAC,OAAIN,EAAWM,EAAf,GACV,GAAE,CAACL,IACCF,EAGL,OACE,yBAC8B,IAA3BA,EAAQS,QAAQC,OACfV,EAAQS,QAAQE,KAAI,SAAAC,GAAM,OACxB,4BACE,oCAAYA,EAAOC,WACnB,uBAAID,EAAOE,YAFHF,EAAOG,GADO,KAO1B,uEAIP,C","sources":["components/MovieDetails/Review.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Review = () => {\n  const [reviews, setReviews] = useState();\n  const { movieId } = useParams();\n  useEffect(() => {\n    fetch(\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=5a1111e9d2c7100474f9cf656ec9c27e&language=en-US&page=1`\n    )\n      .then(r => r.json())\n      .then(r => setReviews(r));\n  }, [movieId]);\n  if (!reviews) {\n    return;\n  }\n  return (\n    <div>\n      {reviews.results.length !== 0 ? (\n        reviews.results.map(review => (\n          <div key={review.id}>\n            <p>Author: {review.author}</p>\n            <p>{review.content}</p>\n          </div>\n        ))\n      ) : (\n        <div>We don`t have any reviews for this movie</div>\n      )}\n    </div>\n  );\n};\n\nexport default Review;\n"],"names":["useState","reviews","setReviews","movieId","useParams","useEffect","fetch","then","r","json","results","length","map","review","author","content","id"],"sourceRoot":""}